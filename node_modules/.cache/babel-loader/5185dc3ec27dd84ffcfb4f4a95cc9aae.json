{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { MARVEL_API, COMICS_URL, MARVEL_API_KEY } from '../utils/constants';\nexport const getMoreComics = () => async dispatch => {\n  try {\n    const result = await axios.get(MARVEL_API + COMICS_URL + '?offset=' + offset + '&apikey=' + MARVEL_API_KEY);\n    dispatch(setOffset(result.data.data.count));\n    dispatch(addMoreComics(result.data.data.results));\n  } catch (error) {\n    return false;\n  }\n};\nconst comicsSlice = createSlice({\n  name: 'comics',\n  initialState: {\n    comicsList: [],\n    offset: 0\n  },\n  reducers: {\n    updateComics(state, action) {\n      state.comicsList = action.payload;\n    },\n\n    addMoreComics(state, action) {\n      state.comicsList = [...state.comicsList, ...action.payload];\n    },\n\n    setOffset(state, action) {\n      state.offset += action.payload;\n    }\n\n  }\n});\nexport const {\n  updateComics,\n  addMoreComics,\n  setOffset\n} = comicsSlice.actions;\nexport default comicsSlice.reducer;","map":{"version":3,"sources":["/Users/Mac/Desktop/applaudo-test/src/store/comicsSlice.js"],"names":["createSlice","axios","MARVEL_API","COMICS_URL","MARVEL_API_KEY","getMoreComics","dispatch","result","get","offset","setOffset","data","count","addMoreComics","results","error","comicsSlice","name","initialState","comicsList","reducers","updateComics","state","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,cAAjC,QAAuD,oBAAvD;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,UAAU,GAACC,UAAX,GAAsB,UAAtB,GAAiCM,MAAjC,GAAwC,UAAxC,GAAmDL,cAA7D,CAArB;AACAE,IAAAA,QAAQ,CAACI,SAAS,CAACH,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBC,KAAlB,CAAV,CAAR;AACAN,IAAAA,QAAQ,CAACO,aAAa,CAACN,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBG,OAAlB,CAAd,CAAR;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,WAAO,KAAP;AACH;AACJ,CARM;AAUP,MAAMC,WAAW,GAAGhB,WAAW,CAAC;AAC5BiB,EAAAA,IAAI,EAAE,QADsB;AAE5BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE,EADF;AAEVV,IAAAA,MAAM,EAAE;AAFE,GAFc;AAM5BW,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACH,UAAN,GAAmBI,MAAM,CAACC,OAA1B;AACH,KAHK;;AAINX,IAAAA,aAAa,CAACS,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACH,UAAN,GAAmB,CAAC,GAAGG,KAAK,CAACH,UAAV,EAAsB,GAAGI,MAAM,CAACC,OAAhC,CAAnB;AACH,KANK;;AAONd,IAAAA,SAAS,CAACY,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACb,MAAN,IAAgBc,MAAM,CAACC,OAAvB;AACH;;AATK;AANkB,CAAD,CAA/B;AAkBA,OAAO,MAAM;AAAEH,EAAAA,YAAF;AAAgBR,EAAAA,aAAhB;AAA+BH,EAAAA;AAA/B,IAA6CM,WAAW,CAACS,OAA/D;AACP,eAAeT,WAAW,CAACU,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { MARVEL_API, COMICS_URL, MARVEL_API_KEY } from '../utils/constants';\n\nexport const getMoreComics = () => async (dispatch) => {\n    try {\n        const result = await axios.get(MARVEL_API+COMICS_URL+'?offset='+offset+'&apikey='+MARVEL_API_KEY);\n        dispatch(setOffset(result.data.data.count));\n        dispatch(addMoreComics(result.data.data.results));\n    } catch (error) {\n        return false;\n    }\n}\n\nconst comicsSlice = createSlice({\n    name: 'comics',\n    initialState: {\n        comicsList: [],\n        offset: 0 \n    },\n    reducers: {\n        updateComics(state, action) {\n            state.comicsList = action.payload;\n        },\n        addMoreComics(state, action) {\n            state.comicsList = [...state.comicsList, ...action.payload];\n        },\n        setOffset(state, action) {\n            state.offset += action.payload;\n        }\n    },\n})\nexport const { updateComics, addMoreComics, setOffset } = comicsSlice.actions\nexport default comicsSlice.reducer"]},"metadata":{},"sourceType":"module"}