{"ast":null,"code":"var _jsxFileName = \"/Users/Mac/Desktop/applaudo-test/src/pages/CharactersDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getDetailCharacter } from '../store/charactersSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport DetailComponent from '../components/DetailComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CharactersDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [ImgUri, setImgUri] = useState(null);\n  const dispatch = useDispatch();\n  const detailObject = useSelector(({\n    characters\n  }) => characters.charactersDetail); //Get data detail\n\n  useEffect(() => {\n    dispatch(getDetailCharacter(id));\n  }, []);\n  useEffect(() => {\n    let imageuri;\n\n    if (detailObject.thumbnail) {\n      var {\n        extension,\n        path\n      } = detailObject.thumbnail;\n      imageuri = path + '/portrait_uncanny.' + extension;\n    }\n\n    setImgUri(imageuri);\n  }, [detailObject]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(DetailComponent, {\n      dataItem: detailObject,\n      imageUri: ImgUri,\n      dataType: \"characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CharactersDetail, \"XutTN0Wtrw8lqgKCKF9F5BJdpW4=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = CharactersDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharactersDetail\");","map":{"version":3,"sources":["/Users/Mac/Desktop/applaudo-test/src/pages/CharactersDetail.js"],"names":["React","useEffect","useState","getDetailCharacter","useDispatch","useSelector","useParams","Container","Row","Col","DetailComponent","CharactersDetail","id","ImgUri","setImgUri","dispatch","detailObject","characters","charactersDetail","imageuri","thumbnail","extension","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,eAAe,SAASC,gBAAT,GAA2B;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,YAAY,GAAGX,WAAW,CAAC,CAAC;AAAEY,IAAAA;AAAF,GAAD,KAAoBA,UAAU,CAACC,gBAAhC,CAAhC,CAJsC,CAMtC;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACZ,kBAAkB,CAACS,EAAD,CAAnB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAJ;;AACA,QAAGH,YAAY,CAACI,SAAhB,EAA0B;AACtB,UAAI;AAACC,QAAAA,SAAD;AAAYC,QAAAA;AAAZ,UAAoBN,YAAY,CAACI,SAArC;AACAD,MAAAA,QAAQ,GAAGG,IAAI,GAAC,oBAAL,GAA0BD,SAArC;AACH;;AACDP,IAAAA,SAAS,CAACK,QAAD,CAAT;AACH,GAPQ,EAON,CAACH,YAAD,CAPM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,eAAD;AACA,MAAA,QAAQ,EAAEA,YADV;AAEA,MAAA,QAAQ,EAAEH,MAFV;AAGA,MAAA,QAAQ,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA5BuBF,gB;UACLL,S,EAEEF,W,EACIC,W;;;KAJDM,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDetailCharacter } from '../store/charactersSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport DetailComponent from '../components/DetailComponent';\n\nexport default function CharactersDetail(){\n    const { id } = useParams();\n    const [ImgUri, setImgUri] = useState(null);\n    const dispatch = useDispatch();\n    const detailObject = useSelector(({ characters }) => characters.charactersDetail)\n    \n    //Get data detail\n    useEffect(() => {\n        dispatch(getDetailCharacter(id))\n    }, [])\n\n    useEffect(() => {\n        let imageuri;\n        if(detailObject.thumbnail){\n            var {extension, path} = detailObject.thumbnail;\n            imageuri = path+'/portrait_uncanny.'+extension;\n        }\n        setImgUri(imageuri)\n    }, [detailObject])\n    return (\n        <Container>\n            <DetailComponent \n            dataItem={detailObject}\n            imageUri={ImgUri}\n            dataType='characters'\n            />\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}