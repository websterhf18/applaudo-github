{"ast":null,"code":"var _jsxFileName = \"/Users/Mac/Desktop/applaudo-test/src/pages/ComicsDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getDetailComics } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\nimport DetailComponent from '../components/DetailComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComicsDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [ImgUri, setImgUri] = useState(null);\n  const dispatch = useDispatch();\n  const detailObject = useSelector(({\n    comics\n  }) => comics.comicsDetail); //Get data detail\n\n  useEffect(() => {\n    dispatch(getDetailComics(id));\n  }, []);\n  useEffect(() => {\n    let imageuri;\n\n    if (detailObject.thumbnail) {\n      var {\n        extension,\n        path\n      } = detailObject.thumbnail;\n      imageuri = path + '/portrait_uncanny.' + extension;\n    }\n\n    setImgUri(imageuri);\n  }, [detailObject]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(DetailComponent, {\n      dataItem: detailObject,\n      imageUri: ImgUri,\n      dataType: \"comics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ComicsDetail, \"XutTN0Wtrw8lqgKCKF9F5BJdpW4=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = ComicsDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicsDetail\");","map":{"version":3,"sources":["/Users/Mac/Desktop/applaudo-test/src/pages/ComicsDetail.js"],"names":["React","useEffect","useState","getDetailComics","useDispatch","useSelector","useParams","Container","DetailComponent","ComicsDetail","id","ImgUri","setImgUri","dispatch","detailObject","comics","comicsDetail","imageuri","thumbnail","extension","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,YAAY,GAAGT,WAAW,CAAC,CAAC;AAAEU,IAAAA;AAAF,GAAD,KAAgBA,MAAM,CAACC,YAAxB,CAAhC,CAJkC,CAMlC;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACV,eAAe,CAACO,EAAD,CAAhB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,QAAJ;;AACA,QAAGH,YAAY,CAACI,SAAhB,EAA0B;AACtB,UAAI;AAACC,QAAAA,SAAD;AAAYC,QAAAA;AAAZ,UAAoBN,YAAY,CAACI,SAArC;AACAD,MAAAA,QAAQ,GAAGG,IAAI,GAAC,oBAAL,GAA0BD,SAArC;AACH;;AACDP,IAAAA,SAAS,CAACK,QAAD,CAAT;AACH,GAPQ,EAON,CAACH,YAAD,CAPM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,eAAD;AACA,MAAA,QAAQ,EAAEA,YADV;AAEA,MAAA,QAAQ,EAAEH,MAFV;AAGA,MAAA,QAAQ,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA5BuBF,Y;UACLH,S,EAEEF,W,EACIC,W;;;KAJDI,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDetailComics } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\n\nimport DetailComponent from '../components/DetailComponent';\n\nexport default function ComicsDetail(){\n    const { id } = useParams();\n    const [ImgUri, setImgUri] = useState(null);\n    const dispatch = useDispatch();\n    const detailObject = useSelector(({ comics }) => comics.comicsDetail)\n    \n    //Get data detail\n    useEffect(() => {\n        dispatch(getDetailComics(id))\n    }, [])\n\n    useEffect(() => {\n        let imageuri;\n        if(detailObject.thumbnail){\n            var {extension, path} = detailObject.thumbnail;\n            imageuri = path+'/portrait_uncanny.'+extension;\n        }\n        setImgUri(imageuri)\n    }, [detailObject])\n    return (\n        <Container>\n            <DetailComponent \n            dataItem={detailObject}\n            imageUri={ImgUri}\n            dataType='comics'\n            />\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}