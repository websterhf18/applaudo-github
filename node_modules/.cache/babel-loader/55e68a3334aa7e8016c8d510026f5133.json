{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { MARVEL_API, STORIES_URL, MARVEL_API_KEY } from '../utils/constants';\nexport const getMoreStories = (offset = 0) => async dispatch => {\n  try {\n    const result = await axios.get(MARVEL_API + STORIES_URL + '?offset=' + offset + '&apikey=' + MARVEL_API_KEY);\n    dispatch(setOffset(result.data.data.count));\n    dispatch(addMoreStories(result.data.data.results));\n  } catch (error) {\n    return false;\n  }\n};\nexport const getMoreCharacters = (id = null, offset = 0) => async dispatch => {\n  try {\n    const result = await axios.get(MARVEL_API + STORIES_URL + '/' + id + CHARACTERS_URL + '?offset=' + offset + '&apikey=' + MARVEL_API_KEY);\n    dispatch(setOffsetCharacters(result.data.data.count));\n    dispatch(updateCharacters(result.data.data.results));\n  } catch (error) {\n    return false;\n  }\n};\nconst storiesSlice = createSlice({\n  name: 'stories',\n  initialState: {\n    storiesList: [],\n    characters: [],\n    comics: [],\n    offset: 0,\n    offset_characters: 0,\n    offset_comics: 0\n  },\n  reducers: {\n    updateStories(state, action) {\n      state.storiesList = action.payload;\n    },\n\n    addMoreStories(state, action) {\n      state.storiesList = [...state.storiesList, ...action.payload];\n    },\n\n    setOffset(state, action) {\n      state.offset += action.payload;\n    },\n\n    setOffsetCharacters(state, action) {\n      state.offset_characters += action.payload;\n    },\n\n    setOffsetComics(state, action) {\n      state.offset_comics += action.payload;\n    },\n\n    updateEmpty(state) {\n      state.offset_characters = 0;\n      state.characters = [];\n      state.offset_comics = 0;\n      state.comics = [];\n    },\n\n    updateCharacters(state, action) {\n      state.characters = [...state.characters, ...action.payload];\n    },\n\n    updateComics(state, action) {\n      state.comics = [...state.stories, ...action.payload];\n    }\n\n  }\n});\nexport const {\n  updateStories,\n  addMoreStories,\n  setOffset,\n  setOffsetCharacters,\n  setOffsetComics,\n  updateEmpty,\n  updateCharacters,\n  updateComics\n} = storiesSlice.actions;\nexport default storiesSlice.reducer;","map":{"version":3,"sources":["/Users/Mac/Desktop/applaudo-test/src/store/storiesSlice.js"],"names":["createSlice","axios","MARVEL_API","STORIES_URL","MARVEL_API_KEY","getMoreStories","offset","dispatch","result","get","setOffset","data","count","addMoreStories","results","error","getMoreCharacters","id","CHARACTERS_URL","setOffsetCharacters","updateCharacters","storiesSlice","name","initialState","storiesList","characters","comics","offset_characters","offset_comics","reducers","updateStories","state","action","payload","setOffsetComics","updateEmpty","updateComics","stories","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { MARVEL_API, STORIES_URL, MARVEL_API_KEY } from '../utils/constants';\n\nexport const getMoreStories = (offset = 0) => async (dispatch) => {\n    try {\n        const result = await axios.get(MARVEL_API+STORIES_URL+'?offset='+offset+'&apikey='+MARVEL_API_KEY);\n        dispatch(setOffset(result.data.data.count));\n        dispatch(addMoreStories(result.data.data.results));\n    } catch (error) {\n        return false;\n    }\n}\nexport const getMoreCharacters = (id = null, offset = 0) => async (dispatch) => {\n    try {\n        const result = await axios.get(MARVEL_API+STORIES_URL+'/'+id+CHARACTERS_URL+'?offset='+offset+'&apikey='+MARVEL_API_KEY);\n        dispatch(setOffsetCharacters(result.data.data.count));\n        dispatch(updateCharacters(result.data.data.results));\n    } catch (error) {\n        return false;\n    }\n}\n\nconst storiesSlice = createSlice({\n    name: 'stories',\n    initialState: {\n        storiesList: [],\n        characters: [],\n        comics: [],\n        offset: 0, \n        offset_characters: 0, \n        offset_comics: 0 \n    },\n    reducers: {\n        updateStories(state, action) {\n            state.storiesList = action.payload;\n        },\n        addMoreStories(state, action) {\n            state.storiesList = [...state.storiesList, ...action.payload];\n        },\n        setOffset(state, action) {\n            state.offset += action.payload;\n        },\n        setOffsetCharacters(state, action) {\n            state.offset_characters += action.payload;\n        },\n        setOffsetComics(state, action) {\n            state.offset_comics += action.payload;\n        },\n        updateEmpty(state) {\n            state.offset_characters = 0;\n            state.characters = [];\n            state.offset_comics = 0;\n            state.comics = [];\n        },\n        updateCharacters(state, action) {\n            state.characters = [...state.characters, ...action.payload];\n        },\n        updateComics(state, action) {\n            state.comics = [...state.stories, ...action.payload];\n        },\n        \n    },\n})\nexport const { \n    updateStories, \n    addMoreStories, \n    setOffset,\n    setOffsetCharacters,\n    setOffsetComics,\n    updateEmpty,\n    updateCharacters,\n    updateComics \n} = storiesSlice.actions\nexport default storiesSlice.reducer"]},"metadata":{},"sourceType":"module"}