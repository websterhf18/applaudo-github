{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { MARVEL_API, STORIES_URL, MARVEL_API_KEY } from '../utils/constants';\nexport const getMoreStories = () => async dispatch => {\n  try {\n    const result = await axios.get(MARVEL_API + STORIES_URL + '?offset=' + offset + '&apikey=' + MARVEL_API_KEY);\n    dispatch(setOffset(result.data.data.count));\n    dispatch(addMoreStories(result.data.data.results));\n  } catch (error) {\n    return false;\n  }\n};\nconst storiesSlice = createSlice({\n  name: 'stories',\n  initialState: {\n    storiesList: [],\n    offset: 0\n  },\n  reducers: {\n    updateStories(state, action) {\n      state.storiesList = action.payload;\n    },\n\n    addMoreStories(state, action) {\n      state.storiesList = [...state.storiesList, ...action.payload];\n    },\n\n    setOffset(state, action) {\n      state.offset += action.payload;\n    }\n\n  }\n});\nexport const {\n  updateStories,\n  addMoreStories,\n  setOffset\n} = storiesSlice.actions;\nexport default storiesSlice.reducer;","map":{"version":3,"sources":["/Users/Mac/Desktop/applaudo-test/src/store/storiesSlice.js"],"names":["createSlice","axios","MARVEL_API","STORIES_URL","MARVEL_API_KEY","getMoreStories","dispatch","result","get","offset","setOffset","data","count","addMoreStories","results","error","storiesSlice","name","initialState","storiesList","reducers","updateStories","state","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,cAAlC,QAAwD,oBAAxD;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,UAAU,GAACC,WAAX,GAAuB,UAAvB,GAAkCM,MAAlC,GAAyC,UAAzC,GAAoDL,cAA9D,CAArB;AACAE,IAAAA,QAAQ,CAACI,SAAS,CAACH,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBC,KAAlB,CAAV,CAAR;AACAN,IAAAA,QAAQ,CAACO,cAAc,CAACN,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBG,OAAlB,CAAf,CAAR;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,WAAO,KAAP;AACH;AACJ,CARM;AAUP,MAAMC,YAAY,GAAGhB,WAAW,CAAC;AAC7BiB,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE,EADH;AAEVV,IAAAA,MAAM,EAAE;AAFE,GAFe;AAM7BW,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACH,WAAN,GAAoBI,MAAM,CAACC,OAA3B;AACH,KAHK;;AAINX,IAAAA,cAAc,CAACS,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACH,WAAN,GAAoB,CAAC,GAAGG,KAAK,CAACH,WAAV,EAAuB,GAAGI,MAAM,CAACC,OAAjC,CAApB;AACH,KANK;;AAONd,IAAAA,SAAS,CAACY,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACb,MAAN,IAAgBc,MAAM,CAACC,OAAvB;AACH;;AATK;AANmB,CAAD,CAAhC;AAmBA,OAAO,MAAM;AAAEH,EAAAA,aAAF;AAAiBR,EAAAA,cAAjB;AAAiCH,EAAAA;AAAjC,IAA+CM,YAAY,CAACS,OAAlE;AACP,eAAeT,YAAY,CAACU,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { MARVEL_API, STORIES_URL, MARVEL_API_KEY } from '../utils/constants';\n\nexport const getMoreStories = () => async (dispatch) => {\n    try {\n        const result = await axios.get(MARVEL_API+STORIES_URL+'?offset='+offset+'&apikey='+MARVEL_API_KEY);\n        dispatch(setOffset(result.data.data.count));\n        dispatch(addMoreStories(result.data.data.results));\n    } catch (error) {\n        return false;\n    }\n}\n\nconst storiesSlice = createSlice({\n    name: 'stories',\n    initialState: {\n        storiesList: [],\n        offset: 0 \n    },\n    reducers: {\n        updateStories(state, action) {\n            state.storiesList = action.payload;\n        },\n        addMoreStories(state, action) {\n            state.storiesList = [...state.storiesList, ...action.payload];\n        },\n        setOffset(state, action) {\n            state.offset += action.payload;\n        }\n        \n    },\n})\nexport const { updateStories, addMoreStories, setOffset } = storiesSlice.actions\nexport default storiesSlice.reducer"]},"metadata":{},"sourceType":"module"}