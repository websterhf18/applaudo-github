{"ast":null,"code":"var _jsxFileName = \"/Users/Mac/Desktop/applaudo-test/src/pages/ComicsStories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getMoreStories, updateEmpty } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport ListComponent from '../components/ListComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComicsStories() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); //Get data detail\n\n  const dataList = useSelector(({\n    comics\n  }) => comics.stories);\n  const offsetLocal = useSelector(({\n    comics\n  }) => comics.offset_stories); //States\n\n  const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const detailChar = useSelector(({\n    comics\n  }) => comics.comicsDetail);\n  useEffect(() => {\n    dispatch(updateEmpty());\n  }, [detailChar]);\n\n  const loadMore = () => {\n    dispatch(getMoreStories(id, offsetLocal));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ListComponent, {\n      items: dataList,\n      moreItemsLoading: moreItemsLoading,\n      loadMore: loadMore,\n      hasNextPage: hasNextPage,\n      listType: \"stories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ComicsStories, \"PthPHCnHYmPVZ098LvXQBrV7Jkc=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ComicsStories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComicsStories\");","map":{"version":3,"sources":["/Users/Mac/Desktop/applaudo-test/src/pages/ComicsStories.js"],"names":["React","useState","useEffect","getMoreStories","updateEmpty","useDispatch","useSelector","useParams","ListComponent","ComicsStories","id","dispatch","dataList","comics","stories","offsetLocal","offset_stories","moreItemsLoading","setMoreItemsLoading","hasNextPage","setHasNextPage","detailChar","comicsDetail","loadMore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,sBAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,eAAe,SAASC,aAAT,GAAwB;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGN,WAAW,EAA5B,CAFmC,CAGnC;;AACA,QAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAgBA,MAAM,CAACC,OAAxB,CAA5B;AACA,QAAMC,WAAW,GAAGT,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAgBA,MAAM,CAACG,cAAxB,CAA/B,CALmC,CAMnC;;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMoB,UAAU,GAAGf,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAgBA,MAAM,CAACS,YAAxB,CAA9B;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,CAACiB,UAAD,CAFM,CAAT;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACnBZ,IAAAA,QAAQ,CAACR,cAAc,CAACO,EAAD,EAAKK,WAAL,CAAf,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,aAAD;AACA,MAAA,KAAK,EAAEH,QADP;AAEA,MAAA,gBAAgB,EAAEK,gBAFlB;AAGA,MAAA,QAAQ,EAAEM,QAHV;AAIA,MAAA,WAAW,EAAEJ,WAJb;AAKA,MAAA,QAAQ,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA/BuBV,a;UACLF,S,EACEF,W,EAEAC,W,EACGA,W,EAKDA,W;;;KAVCG,a","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getMoreStories, updateEmpty } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function ComicsStories(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ comics }) => comics.stories)\n    const offsetLocal = useSelector(({ comics }) => comics.offset_stories)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const detailChar = useSelector(({ comics }) => comics.comicsDetail)\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [detailChar])\n\n    const loadMore = () => {\n        dispatch(getMoreStories(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"stories\"\n            />\n        </div> \n    )\n}"]},"metadata":{},"sourceType":"module"}