[{"/Users/Mac/Desktop/applaudo-test/src/index.js":"1","/Users/Mac/Desktop/applaudo-test/src/reportWebVitals.js":"2","/Users/Mac/Desktop/applaudo-test/src/App.js":"3","/Users/Mac/Desktop/applaudo-test/src/store/index.js":"4","/Users/Mac/Desktop/applaudo-test/src/pages/Comics.js":"5","/Users/Mac/Desktop/applaudo-test/src/pages/Characters.js":"6","/Users/Mac/Desktop/applaudo-test/src/components/Header.js":"7","/Users/Mac/Desktop/applaudo-test/src/pages/Stories.js":"8","/Users/Mac/Desktop/applaudo-test/src/store/charactersSlice.js":"9","/Users/Mac/Desktop/applaudo-test/src/store/comicsSlice.js":"10","/Users/Mac/Desktop/applaudo-test/src/store/storiesSlice.js":"11","/Users/Mac/Desktop/applaudo-test/src/components/ListComponent.js":"12","/Users/Mac/Desktop/applaudo-test/src/utils/constants.js":"13","/Users/Mac/Desktop/applaudo-test/src/pages/CharactersComics.js":"14","/Users/Mac/Desktop/applaudo-test/src/pages/CharactersDetail.js":"15","/Users/Mac/Desktop/applaudo-test/src/components/DetailComponent.js":"16","/Users/Mac/Desktop/applaudo-test/src/pages/CharactersStories.js":"17","/Users/Mac/Desktop/applaudo-test/src/pages/ComicsDetail.js":"18","/Users/Mac/Desktop/applaudo-test/src/pages/ComicsCharacters.js":"19","/Users/Mac/Desktop/applaudo-test/src/pages/ComicsStories.js":"20","/Users/Mac/Desktop/applaudo-test/src/serviceWorker.js":"21","/Users/Mac/Desktop/applaudo-test/src/pages/StoriesCharacters.js":"22","/Users/Mac/Desktop/applaudo-test/src/pages/StoriesComics.js":"23"},{"size":741,"mtime":1613759222419,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1613604540135,"results":"26","hashOfConfig":"25"},{"size":2458,"mtime":1613758737130,"results":"27","hashOfConfig":"25"},{"size":426,"mtime":1613715599601,"results":"28","hashOfConfig":"25"},{"size":910,"mtime":1613718310335,"results":"29","hashOfConfig":"25"},{"size":954,"mtime":1613716163717,"results":"30","hashOfConfig":"25"},{"size":1200,"mtime":1613757073383,"results":"31","hashOfConfig":"25"},{"size":919,"mtime":1613717426904,"results":"32","hashOfConfig":"25"},{"size":3531,"mtime":1613728611916,"results":"33","hashOfConfig":"25"},{"size":3428,"mtime":1613746021194,"results":"34","hashOfConfig":"25"},{"size":2767,"mtime":1613758810287,"results":"35","hashOfConfig":"25"},{"size":6991,"mtime":1613758152560,"results":"36","hashOfConfig":"25"},{"size":256,"mtime":1613609767966,"results":"37","hashOfConfig":"25"},{"size":1261,"mtime":1613728264133,"results":"38","hashOfConfig":"25"},{"size":1150,"mtime":1613724505307,"results":"39","hashOfConfig":"25"},{"size":2517,"mtime":1613729557466,"results":"40","hashOfConfig":"25"},{"size":1250,"mtime":1613728545033,"results":"41","hashOfConfig":"25"},{"size":1110,"mtime":1613729027383,"results":"42","hashOfConfig":"25"},{"size":1222,"mtime":1613746009091,"results":"43","hashOfConfig":"25"},{"size":1204,"mtime":1613746424619,"results":"44","hashOfConfig":"25"},{"size":4126,"mtime":1613759080969,"results":"45","hashOfConfig":"25"},{"size":1220,"mtime":1613757931647,"results":"46","hashOfConfig":"25"},{"size":1121,"mtime":1613758642562,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1qywqc4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},"/Users/Mac/Desktop/applaudo-test/src/index.js",[],["109","110"],"/Users/Mac/Desktop/applaudo-test/src/reportWebVitals.js",[],"/Users/Mac/Desktop/applaudo-test/src/App.js",[],"/Users/Mac/Desktop/applaudo-test/src/store/index.js",[],"/Users/Mac/Desktop/applaudo-test/src/pages/Comics.js",["111","112"],"import React, { useState } from 'react';\nimport { getMoreComics } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListComponent from '../components/ListComponent';\n\nexport default function Comics(){\n    const dispatch = useDispatch();\n    const dataList = useSelector(({ comics }) => comics.comicsList)\n    const offsetLocal = useSelector(({ comics }) => comics.offset)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n    \n    const loadMore = () => {\n        dispatch(getMoreComics(offsetLocal)); \n    }\n\n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"comics\"\n            />\n        </div>\n    )\n}","/Users/Mac/Desktop/applaudo-test/src/pages/Characters.js",["113","114"],"import React, { useState } from 'react';\nimport { getMoreCharacters } from '../store/charactersSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListComponent from '../components/ListComponent';\n\nexport default function Characters(){\n    const dispatch = useDispatch();\n    const dataList = useSelector(({ characters }) => characters.charactersList)\n    const offsetLocal = useSelector(({ characters }) => characters.offset)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const loadMore = () => {\n        dispatch(getMoreCharacters(offsetLocal)); \n    }\n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"characters\"\n            />\n        </div>\n        \n    )\n}","/Users/Mac/Desktop/applaudo-test/src/components/Header.js",[],"/Users/Mac/Desktop/applaudo-test/src/pages/Stories.js",["115","116"],"import React, { useState } from 'react';\nimport { getMoreStories } from '../store/storiesSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListComponent from '../components/ListComponent';\n\nexport default function Stories(){\n    const dispatch = useDispatch();\n    const dataList = useSelector(({ stories }) => stories.storiesList)\n    const offsetLocal = useSelector(({ stories }) => stories.offset)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n    \n    const loadMore = () => {\n        dispatch(getMoreStories(offsetLocal)); \n    }\n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"stories\"\n            />\n        </div>\n    )\n}","/Users/Mac/Desktop/applaudo-test/src/store/charactersSlice.js",[],"/Users/Mac/Desktop/applaudo-test/src/store/comicsSlice.js",[],"/Users/Mac/Desktop/applaudo-test/src/store/storiesSlice.js",[],"/Users/Mac/Desktop/applaudo-test/src/components/ListComponent.js",["117","118","119","120","121","122","123","124"],"import React from 'react';\nimport { FixedSizeList } from 'react-window';\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { Card, Button, Row } from 'react-bootstrap';\nimport { HeartFill } from 'react-bootstrap-icons';\nimport { Link } from \"react-router-dom\";\n\nconst ListComponent = ({ items, moreItemsLoading, loadMore, hasNextPage, listType }) => {\n    \n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    //Functions to build grid\n    const ITEM_WIDTH = 420;\n    const ITEM_HEIGHT = 550;\n    const generateIndexesForRow = (rowIndex, maxItemsPerRow, itemsAmount) => {\n        const result = [];\n        const startIndex = rowIndex * maxItemsPerRow;\n        for (let i = startIndex; i < Math.min(startIndex + maxItemsPerRow, itemsAmount); i++) {\n            result.push(i);\n        }\n        return result;\n    }\n    const getMaxItemsAmountPerRow = (width) => {\n        return 3;\n    }\n    const getRowsAmount = (width, itemsAmount, hasMore) => {\n        const maxItemsPerRow = getMaxItemsAmountPerRow(width);\n        return Math.ceil(itemsAmount/ maxItemsPerRow) + (hasMore ? 1 : 0);\n    }\n    const itemCount = getRowsAmount(width, items.length, hasNextPage);\n    //\n    const rowRenderer = ({index, style}) => {\n        const maxItemsPerRow = getMaxItemsAmountPerRow(width);\n        const itemsIDs = generateIndexesForRow(index, maxItemsPerRow, items.length).map(itemIndex => items[itemIndex]);\n        return (\n            <Row style={{...style, padding: '20px 0px'}} >\n                <div style={{\n                    display: 'flex',\n                    margin: '0 auto'\n                }}>\n                    {itemsIDs.map(itemID => {\n                        let imageuri;\n                        if(itemID.thumbnail){\n                            var {extension, path} = itemID.thumbnail;\n                            imageuri = path+'/landscape_xlarge.'+extension;\n                        }\n                        return (\n                            <Card \n                            key={itemID.id}\n                            style={{ \n                                width: '18rem',\n                                margin: '0px 15px',\n                                height: ITEM_HEIGHT - 20\n                            }}>\n                                {listType !== 'stories' ? \n                                    <Card.Img variant=\"top\" src={imageuri} />\n                                : null}\n                                {listType !== 'stories' ? \n                                    <Card.ImgOverlay>\n                                        <Card.Title\n                                        className=\"text-right\">\n                                            <HeartFill color=\"royalblue\" />\n                                        </Card.Title>\n                                    </Card.ImgOverlay>\n                                : null}\n                                <Card.Body>\n                                    <Card.Title>{listType == 'comics' ||  listType == 'stories' ? itemID.title : itemID.name}</Card.Title>\n                                    <Card.Text style={{\n                                        maxHeight: 100,\n                                        overflow: 'hidden'\n                                    }}>\n                                    {itemID.description}\n                                    </Card.Text>\n                                </Card.Body>\n                                {listType == 'characters' ?\n                                <Card.Body style={{ \n                                    zIndex: 99999\n                                }}>\n                                        <Link to={`/characters/${itemID.id}`}>\n                                            <Button                                         \n                                            className=\"m-2\"\n                                            variant=\"primary\">View detail</Button>\n                                        </Link>\n                                </Card.Body>\n                                : null}\n                                {listType == 'comics' ?\n                                <Card.Body style={{ \n                                    zIndex: 99999\n                                }}>\n                                        <Link to={`/comics/${itemID.id}`}>\n                                            <Button                                         \n                                            className=\"m-2\"\n                                            variant=\"primary\">View detail</Button>\n                                        </Link>\n                                </Card.Body>\n                                : null}\n                                {listType == 'stories' ?\n                                <Card.Body style={{ \n                                    zIndex: 99999\n                                }}>\n                                        <Link to={`/stories/characters/${itemID.id}`}>\n                                            <Button \n                                            disabled={(itemID.characters.available == 0 ? true: false)}                                           \n                                            className=\"m-2\"\n                                            variant=\"primary\">View characters</Button>\n                                        </Link>\n                                        <Link to={`/stories/comics/${itemID.id}`}>\n                                            <Button        \n                                            disabled={(itemID.comics.available == 0 ? true: false)}                                    \n                                            className=\"m-2\"\n                                            variant=\"primary\">View comics</Button>\n                                        </Link>\n                                </Card.Body>\n                                : null}\n                            </Card>\n                        )}\n                    )}\n                </div>\n            </Row>\n        )\n    };\n    return (\n        <InfiniteLoader\n            isItemLoaded={({index}) => {\n                const maxItemsPerRow = getMaxItemsAmountPerRow(width);\n                const allItemsLoaded = generateIndexesForRow(index, maxItemsPerRow, items.length).length > 0;\n                return !hasNextPage || allItemsLoaded;\n            }}\n            itemCount={itemCount}\n            loadMoreItems={loadMore}\n        >\n            {({ onItemsRendered, ref }) => (\n                <FixedSizeList\n                ref={ref}\n                height={height}\n                width={width}\n                itemCount={itemCount}\n                itemSize={ITEM_HEIGHT}\n                onItemsRendered={onItemsRendered}\n                >\n                    {rowRenderer}\n                </FixedSizeList>\n            )}\n        </InfiniteLoader>\n    )\n};\n\nexport default ListComponent;","/Users/Mac/Desktop/applaudo-test/src/utils/constants.js",[],["125","126"],"/Users/Mac/Desktop/applaudo-test/src/pages/CharactersComics.js",["127","128","129","130"],"import React, { useState, useEffect } from 'react';\nimport { getMoreComics, updateEmpty, setOffsetComics } from '../store/charactersSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function CharactersComics(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ characters }) => characters.charactersComics)\n    const offsetLocal = useSelector(({ characters }) => characters.offset_comics)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const detailChar = useSelector(({ characters }) => characters.charactersDetail)\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [detailChar])\n\n    const loadMore = () => {\n        dispatch(getMoreComics(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"comics\"\n            />\n        </div> \n    )\n}","/Users/Mac/Desktop/applaudo-test/src/pages/CharactersDetail.js",["131","132","133"],"import React, { useEffect, useState } from 'react';\nimport { getDetailCharacter } from '../store/charactersSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport DetailComponent from '../components/DetailComponent';\n\nexport default function CharactersDetail(){\n    const { id } = useParams();\n    const [ImgUri, setImgUri] = useState(null);\n    const dispatch = useDispatch();\n    const detailObject = useSelector(({ characters }) => characters.charactersDetail)\n    \n    //Get data detail\n    useEffect(() => {\n        dispatch(getDetailCharacter(id))\n    }, [])\n\n    useEffect(() => {\n        let imageuri;\n        if(detailObject.thumbnail){\n            var {extension, path} = detailObject.thumbnail;\n            imageuri = path+'/portrait_uncanny.'+extension;\n        }\n        setImgUri(imageuri)\n    }, [detailObject])\n    return (\n        <Container>\n            <DetailComponent \n            dataItem={detailObject}\n            imageUri={ImgUri}\n            dataType='characters'\n            />\n        </Container>\n    )\n}","/Users/Mac/Desktop/applaudo-test/src/components/DetailComponent.js",["134","135","136","137","138","139"],"import React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\nconst DetailComponent = ({ dataItem, imageUri, dataType  }) => {\n    return (\n        <Row>\n            <Col>\n                <img src={imageUri}/>\n            </Col>\n            <Col>\n                {dataType == 'comics' ?\n                <h2>{dataItem.title}</h2>\n                : <h2>{dataItem.name}</h2> }\n                <p>\n                    {dataItem.description}\n                </p>\n                {dataType == 'comics' ?\n                <div>\n                    <p>\n                        Characters: {dataItem.characters.available}\n                    </p>\n                    <Link to={`/comics/characters/${dataItem.id}`}>\n                        <Button \n                        disabled={(dataItem.characters.available == 0 ? true: false)}                                        \n                        className=\"m-2\"\n                        variant=\"primary\">Go Characters</Button>\n                    </Link>\n                    <p>\n                        Stories: {dataItem.stories.available}\n                    </p>\n                    <Link to={`/comics/stories/${dataItem.id}`}>\n                        <Button  \n                        disabled={(dataItem.stories.available == 0 ? true: false)}                                       \n                        className=\"m-2\"\n                        variant=\"primary\">Go Stories</Button>\n                    </Link>\n                </div>\n                : null }\n                {dataType == 'characters' ?\n                <div>\n                    <p>\n                        Comics: {dataItem.comics.available}\n                    </p>\n                    <Link to={`/characters/comics/${dataItem.id}`}>\n                        <Button                                         \n                        className=\"m-2\"\n                        variant=\"primary\">Go Comics</Button>\n                    </Link>\n                    <p>\n                        Stories: {dataItem.stories.available}\n                    </p>\n                    <Link to={`/characters/stories/${dataItem.id}`}>\n                        <Button                                         \n                        className=\"m-2\"\n                        variant=\"primary\">Go Stories</Button>\n                    </Link>\n                </div>\n                : null }\n            </Col>\n        </Row>\n    )\n};\n\nexport default DetailComponent;","/Users/Mac/Desktop/applaudo-test/src/pages/CharactersStories.js",["140","141","142"],"import React, { useState, useEffect } from 'react';\nimport { getMoreStories, updateEmpty } from '../store/charactersSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function CharactersStories(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ characters }) => characters.charactersStories)\n    const offsetLocal = useSelector(({ characters }) => characters.offset_stories)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const detailChar = useSelector(({ characters }) => characters.charactersDetail)\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [detailChar])\n\n    const loadMore = () => {\n        dispatch(getMoreStories(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"stories\"\n            />\n        </div> \n    )\n}","/Users/Mac/Desktop/applaudo-test/src/pages/ComicsDetail.js",["143"],"import React, { useEffect, useState } from 'react';\nimport { getDetailComics } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\n\nimport DetailComponent from '../components/DetailComponent';\n\nexport default function ComicsDetail(){\n    const { id } = useParams();\n    const [ImgUri, setImgUri] = useState(null);\n    const dispatch = useDispatch();\n    const detailObject = useSelector(({ comics }) => comics.comicsDetail)\n    \n    //Get data detail\n    useEffect(() => {\n        dispatch(getDetailComics(id))\n    }, [])\n\n    useEffect(() => {\n        let imageuri;\n        if(detailObject.thumbnail){\n            var {extension, path} = detailObject.thumbnail;\n            imageuri = path+'/portrait_uncanny.'+extension;\n        }\n        setImgUri(imageuri)\n    }, [detailObject])\n    return (\n        <Container>\n            <DetailComponent \n            dataItem={detailObject}\n            imageUri={ImgUri}\n            dataType='comics'\n            />\n        </Container>\n    )\n}","/Users/Mac/Desktop/applaudo-test/src/pages/ComicsCharacters.js",["144","145","146"],"import React, { useState, useEffect } from 'react';\nimport { getMoreCharacters, updateEmpty } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function ComicsCharacters(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ comics }) => comics.characters)\n    const offsetLocal = useSelector(({ comics }) => comics.offset_characters)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const detailChar = useSelector(({ comics }) => comics.comicsDetail)\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [detailChar])\n\n    const loadMore = () => {\n        dispatch(getMoreCharacters(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"characters\"\n            />\n        </div> \n    )\n}","/Users/Mac/Desktop/applaudo-test/src/pages/ComicsStories.js",["147","148","149"],"import React, { useState, useEffect } from 'react';\nimport { getMoreStories, updateEmpty } from '../store/comicsSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function ComicsStories(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ comics }) => comics.stories)\n    const offsetLocal = useSelector(({ comics }) => comics.offset_stories)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const detailChar = useSelector(({ comics }) => comics.comicsDetail)\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [detailChar])\n\n    const loadMore = () => {\n        dispatch(getMoreStories(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"stories\"\n            />\n        </div> \n    )\n}","/Users/Mac/Desktop/applaudo-test/src/serviceWorker.js",[],"/Users/Mac/Desktop/applaudo-test/src/pages/StoriesCharacters.js",["150","151","152"],"import React, { useState, useEffect } from 'react';\nimport { getMoreCharacters, updateEmpty } from '../store/storiesSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function StoriesCharacters(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ stories }) => stories.characters)\n    const offsetLocal = useSelector(({ stories }) => stories.offset_characters)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    //const detailChar = useSelector(({ comics }) => comics.comicsDetail)\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [])\n\n    const loadMore = () => {\n        dispatch(getMoreCharacters(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"characters\"\n            />\n        </div> \n    )\n}","/Users/Mac/Desktop/applaudo-test/src/pages/StoriesComics.js",["153","154","155"],"import React, { useState, useEffect } from 'react';\nimport { getMoreComics, updateEmpty } from '../store/storiesSlice';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport ListComponent from '../components/ListComponent';\n\nexport default function StoriesComics(){\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    //Get data detail\n    const dataList = useSelector(({ stories }) => stories.comics)\n    const offsetLocal = useSelector(({ stories }) => stories.offset_comics)\n    //States\n    const [moreItemsLoading, setMoreItemsLoading] = useState(false);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    useEffect(() => {\n        dispatch(updateEmpty())\n    }, [])\n\n    const loadMore = () => {\n        dispatch(getMoreComics(id, offsetLocal)); \n    }\n    \n    return (\n        <div>\n            <ListComponent\n            items={dataList}\n            moreItemsLoading={moreItemsLoading}\n            loadMore={loadMore}\n            hasNextPage={hasNextPage}\n            listType=\"comics\"\n            />\n        </div> \n    )\n}",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":11,"column":30,"nodeType":"162","messageId":"163","endLine":11,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":12,"column":25,"nodeType":"162","messageId":"163","endLine":12,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":11,"column":30,"nodeType":"162","messageId":"163","endLine":11,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":12,"column":25,"nodeType":"162","messageId":"163","endLine":12,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":11,"column":30,"nodeType":"162","messageId":"163","endLine":11,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":12,"column":25,"nodeType":"162","messageId":"163","endLine":12,"endColumn":39},{"ruleId":"160","severity":1,"message":"165","line":13,"column":11,"nodeType":"162","messageId":"163","endLine":13,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":67,"column":59,"nodeType":"168","messageId":"169","endLine":67,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":67,"column":84,"nodeType":"168","messageId":"169","endLine":67,"endColumn":86},{"ruleId":"166","severity":1,"message":"167","line":75,"column":43,"nodeType":"168","messageId":"169","endLine":75,"endColumn":45},{"ruleId":"166","severity":1,"message":"167","line":86,"column":43,"nodeType":"168","messageId":"169","endLine":86,"endColumn":45},{"ruleId":"166","severity":1,"message":"167","line":97,"column":43,"nodeType":"168","messageId":"169","endLine":97,"endColumn":45},{"ruleId":"166","severity":1,"message":"167","line":103,"column":84,"nodeType":"168","messageId":"169","endLine":103,"endColumn":86},{"ruleId":"166","severity":1,"message":"167","line":109,"column":80,"nodeType":"168","messageId":"169","endLine":109,"endColumn":82},{"ruleId":"156","replacedBy":"170"},{"ruleId":"158","replacedBy":"171"},{"ruleId":"160","severity":1,"message":"172","line":2,"column":38,"nodeType":"162","messageId":"163","endLine":2,"endColumn":53},{"ruleId":"160","severity":1,"message":"161","line":15,"column":30,"nodeType":"162","messageId":"163","endLine":15,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":16,"column":25,"nodeType":"162","messageId":"163","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":20,"suggestions":"176"},{"ruleId":"160","severity":1,"message":"177","line":5,"column":21,"nodeType":"162","messageId":"163","endLine":5,"endColumn":24},{"ruleId":"160","severity":1,"message":"178","line":5,"column":26,"nodeType":"162","messageId":"163","endLine":5,"endColumn":29},{"ruleId":"173","severity":1,"message":"179","line":18,"column":8,"nodeType":"175","endLine":18,"endColumn":10,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":9,"column":17,"nodeType":"183","endLine":9,"endColumn":38},{"ruleId":"166","severity":1,"message":"167","line":12,"column":27,"nodeType":"168","messageId":"169","endLine":12,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":18,"column":27,"nodeType":"168","messageId":"169","endLine":18,"endColumn":29},{"ruleId":"166","severity":1,"message":"167","line":25,"column":66,"nodeType":"168","messageId":"169","endLine":25,"endColumn":68},{"ruleId":"166","severity":1,"message":"167","line":34,"column":63,"nodeType":"168","messageId":"169","endLine":34,"endColumn":65},{"ruleId":"166","severity":1,"message":"167","line":40,"column":27,"nodeType":"168","messageId":"169","endLine":40,"endColumn":29},{"ruleId":"160","severity":1,"message":"161","line":15,"column":30,"nodeType":"162","messageId":"163","endLine":15,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":16,"column":25,"nodeType":"162","messageId":"163","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":20,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"179","line":18,"column":8,"nodeType":"175","endLine":18,"endColumn":10,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"161","line":15,"column":30,"nodeType":"162","messageId":"163","endLine":15,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":16,"column":25,"nodeType":"162","messageId":"163","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":20,"suggestions":"186"},{"ruleId":"160","severity":1,"message":"161","line":15,"column":30,"nodeType":"162","messageId":"163","endLine":15,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":16,"column":25,"nodeType":"162","messageId":"163","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":20,"suggestions":"187"},{"ruleId":"160","severity":1,"message":"161","line":15,"column":30,"nodeType":"162","messageId":"163","endLine":15,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":16,"column":25,"nodeType":"162","messageId":"163","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":10,"suggestions":"188"},{"ruleId":"160","severity":1,"message":"161","line":15,"column":30,"nodeType":"162","messageId":"163","endLine":15,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":16,"column":25,"nodeType":"162","messageId":"163","endLine":16,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":20,"column":8,"nodeType":"175","endLine":20,"endColumn":10,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'setMoreItemsLoading' is assigned a value but never used.","Identifier","unusedVar","'setHasNextPage' is assigned a value but never used.","'ITEM_WIDTH' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["190"],["191"],"'setOffsetComics' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["193"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["194"],["195"],["196"],["197"],["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"200","fix":"204"},{"desc":"202","fix":"205"},{"desc":"200","fix":"206"},{"desc":"200","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},"Update the dependencies array to be: [detailChar, dispatch]",{"range":"211","text":"212"},"Update the dependencies array to be: [dispatch, id]",{"range":"213","text":"214"},{"range":"215","text":"212"},{"range":"216","text":"214"},{"range":"217","text":"212"},{"range":"218","text":"212"},"Update the dependencies array to be: [dispatch]",{"range":"219","text":"220"},{"range":"221","text":"220"},[886,898],"[detailChar, dispatch]",[678,680],"[dispatch, id]",[873,885],[642,644],[839,851],[827,839],[847,849],"[dispatch]",[756,758]]